// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoliMarket.DataAccess.Context;

#nullable disable

namespace PoliMarket.DataAccess.Migrations
{
    [DbContext(typeof(PoliMarketDbContext))]
    partial class PoliMarketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PoliMarket.Core.Entities.Autorizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVigencia")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAutorizacion")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Autorizaciones");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.HistoricoOrdenEntrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoAnterior")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EstadoNuevo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdHistorial")
                        .HasColumnType("int");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrden");

                    b.ToTable("HistoricoOrdenesEntrega");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.OrdenEntrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoEntrega")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdVenta")
                        .IsUnique();

                    b.ToTable("OrdenesEntrega");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("Identificacion")
                        .IsUnique();

                    b.ToTable("Persona");

                    b.HasDiscriminator<string>("TipoPersona").HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto")
                        .IsUnique();

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.ProductoVenta", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProducto", "IdVenta");

                    b.HasIndex("IdVenta");

                    b.ToTable("ProductosVenta");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.ProveedorProducto", b =>
                {
                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CantidadUltimaCompra")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaUltimaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("IdProveedor", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("ProveedoresProductos");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.StockProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto")
                        .IsUnique();

                    b.ToTable("StockProductos");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.VendedorAutorizacion", b =>
                {
                    b.Property<int>("IdVendedor")
                        .HasColumnType("int");

                    b.Property<int>("IdAutorizacion")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("IdVendedor", "IdAutorizacion");

                    b.HasIndex("IdAutorizacion");

                    b.ToTable("VendedoresAutorizacion");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVendedor");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Cliente", b =>
                {
                    b.HasBaseType("PoliMarket.Core.Entities.Persona");

                    b.Property<int>("CodigoCliente")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Vendedor", b =>
                {
                    b.HasBaseType("PoliMarket.Core.Entities.Persona");

                    b.Property<bool>("EstaAutorizado")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Vendedor");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.HistoricoOrdenEntrega", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.OrdenEntrega", "Orden")
                        .WithMany("HistorialCambios")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.OrdenEntrega", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Venta", "Venta")
                        .WithOne("OrdenEntrega")
                        .HasForeignKey("PoliMarket.Core.Entities.OrdenEntrega", "IdVenta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.ProductoVenta", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Producto", "Producto")
                        .WithMany("ProductosVenta")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PoliMarket.Core.Entities.Venta", "Venta")
                        .WithMany("ProductosVenta")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.ProveedorProducto", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Producto", "Producto")
                        .WithMany("ProveedoresProducto")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PoliMarket.Core.Entities.Proveedor", "Proveedor")
                        .WithMany("ProductosProveedor")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.StockProducto", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Producto", "Producto")
                        .WithOne("Stock")
                        .HasForeignKey("PoliMarket.Core.Entities.StockProducto", "IdProducto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.VendedorAutorizacion", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Autorizacion", "Autorizacion")
                        .WithMany("VendedoresAutorizacion")
                        .HasForeignKey("IdAutorizacion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PoliMarket.Core.Entities.Vendedor", "Vendedor")
                        .WithMany("Autorizaciones")
                        .HasForeignKey("IdVendedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Autorizacion");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Venta", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PoliMarket.Core.Entities.Vendedor", "Vendedor")
                        .WithMany("Ventas")
                        .HasForeignKey("IdVendedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Autorizacion", b =>
                {
                    b.Navigation("VendedoresAutorizacion");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.OrdenEntrega", b =>
                {
                    b.Navigation("HistorialCambios");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Producto", b =>
                {
                    b.Navigation("ProductosVenta");

                    b.Navigation("ProveedoresProducto");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Proveedor", b =>
                {
                    b.Navigation("ProductosProveedor");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Venta", b =>
                {
                    b.Navigation("OrdenEntrega");

                    b.Navigation("ProductosVenta");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Vendedor", b =>
                {
                    b.Navigation("Autorizaciones");

                    b.Navigation("Ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
