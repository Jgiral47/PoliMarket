// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoliMarket.DataAccess.Context;

#nullable disable

namespace PoliMarket.DataAccess.Migrations
{
    [DbContext(typeof(PoliMarketDbContext))]
    partial class PoliMarketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PoliMarket.Core.Entities.Autorizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsVigente")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVigencia")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAutorizacion")
                        .HasColumnType("int");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdAutorizacion")
                        .IsUnique();

                    b.HasIndex("IdVendedor");

                    b.ToTable("Autorizaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EsVigente = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaVigencia = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdAutorizacion = 6001,
                            IdVendedor = 1,
                            Tipo = "Venta"
                        },
                        new
                        {
                            Id = 2,
                            EsVigente = true,
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaVigencia = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdAutorizacion = 6002,
                            IdVendedor = 2,
                            Tipo = "Venta"
                        });
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EstadoEntrega")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEntrega")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEntrega")
                        .IsUnique();

                    b.HasIndex("IdVenta");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("Identificacion")
                        .IsUnique();

                    b.ToTable("Personas", (string)null);

                    b.HasDiscriminator<string>("TipoPersona").HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockDisponible")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto")
                        .IsUnique();

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Descripcion = "Laptop para uso profesional",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 2001,
                            Nombre = "Laptop Dell Inspiron",
                            Precio = 2500000m,
                            StockDisponible = 15
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Descripcion = "Mouse ergonómico inalámbrico",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 2002,
                            Nombre = "Mouse Inalámbrico",
                            Precio = 85000m,
                            StockDisponible = 50
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Descripcion = "Teclado mecánico RGB",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 2003,
                            Nombre = "Teclado Mecánico",
                            Precio = 320000m,
                            StockDisponible = 25
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Descripcion = "Monitor Full HD IPS",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 2004,
                            Nombre = "Monitor 24 pulgadas",
                            Precio = 890000m,
                            StockDisponible = 8
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Descripcion = "Disco sólido de alta velocidad",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 2005,
                            Nombre = "Disco SSD 1TB",
                            Precio = 450000m,
                            StockDisponible = 30
                        });
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdProveedor")
                        .IsUnique();

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Correo = "contacto@techsolutions.com",
                            IdProveedor = 1001,
                            Nombre = "Proveedor Tech Solutions",
                            Telefono = "555-0001"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Correo = "ventas@disnacional.com",
                            IdProveedor = 1002,
                            Nombre = "Distribuidora Nacional",
                            Telefono = "555-0002"
                        });
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.ProveedorProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdProveedor");

                    b.ToTable("ProveedorProductos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaInicio = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 1,
                            IdProveedor = 1
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaInicio = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 4,
                            IdProveedor = 1
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaInicio = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 2,
                            IdProveedor = 2
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            FechaInicio = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 3,
                            IdProveedor = 2
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            FechaInicio = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdProducto = 5,
                            IdProveedor = 2
                        });
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<string>("NumeroFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVendedor");

                    b.HasIndex("IdVenta")
                        .IsUnique();

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.VentaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("VentaProductos");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Cliente", b =>
                {
                    b.HasBaseType("PoliMarket.Core.Entities.Persona");

                    b.Property<int>("CodigoCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.HasIndex("CodigoCliente")
                        .IsUnique()
                        .HasFilter("[CodigoCliente] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Cliente");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Apellido = "Martínez",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdPersona = 3004,
                            Identificacion = "99887766",
                            Nombre = "Ana Sofía",
                            CodigoCliente = 5001,
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Apellido = "Jiménez",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdPersona = 3005,
                            Identificacion = "55443322",
                            Nombre = "Roberto",
                            CodigoCliente = 5002,
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Apellido = "Fernández",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdPersona = 3006,
                            Identificacion = "66778899",
                            Nombre = "Lucía",
                            CodigoCliente = 5003,
                            FechaRegistro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Vendedor", b =>
                {
                    b.HasBaseType("PoliMarket.Core.Entities.Persona");

                    b.Property<bool>("EstaAutorizado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaAutorizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("int");

                    b.HasIndex("IdVendedor")
                        .IsUnique()
                        .HasFilter("[IdVendedor] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Vendedor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Apellido = "Pérez",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdPersona = 3001,
                            Identificacion = "12345678",
                            Nombre = "Juan Carlos",
                            EstaAutorizado = true,
                            FechaAutorizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdVendedor = 4001
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Apellido = "González",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdPersona = 3002,
                            Identificacion = "87654321",
                            Nombre = "María Elena",
                            EstaAutorizado = true,
                            FechaAutorizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdVendedor = 4002
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Apellido = "Rodríguez",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdPersona = 3003,
                            Identificacion = "11223344",
                            Nombre = "Carlos Alberto",
                            EstaAutorizado = false,
                            IdVendedor = 4003
                        });
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Autorizacion", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Vendedor", "Vendedor")
                        .WithMany("Autorizaciones")
                        .HasForeignKey("IdVendedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Entrega", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Venta", "Venta")
                        .WithMany("Entregas")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.ProveedorProducto", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Producto", "Producto")
                        .WithMany("ProveedorProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoliMarket.Core.Entities.Proveedor", "Proveedor")
                        .WithMany("ProveedorProductos")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Venta", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoliMarket.Core.Entities.Vendedor", "Vendedor")
                        .WithMany("Ventas")
                        .HasForeignKey("IdVendedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.VentaProducto", b =>
                {
                    b.HasOne("PoliMarket.Core.Entities.Producto", "Producto")
                        .WithMany("VentaProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoliMarket.Core.Entities.Venta", "Venta")
                        .WithMany("VentaProductos")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Producto", b =>
                {
                    b.Navigation("ProveedorProductos");

                    b.Navigation("VentaProductos");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Proveedor", b =>
                {
                    b.Navigation("ProveedorProductos");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Venta", b =>
                {
                    b.Navigation("Entregas");

                    b.Navigation("VentaProductos");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("PoliMarket.Core.Entities.Vendedor", b =>
                {
                    b.Navigation("Autorizaciones");

                    b.Navigation("Ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
